/*****************************************************************************

Copyright (c) 1994, 2018, Oracle and/or its affiliates. All Rights Reserved.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License, version 2.0, as published by the
Free Software Foundation.

This program is also distributed with certain software (including but not
limited to OpenSSL) that is licensed under separate terms, as designated in a
particular file or component or in included license documentation. The authors
of MySQL hereby grant you an additional permission to link the program and
your derivative works with the separately licensed software that they have
included with MySQL.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU General Public License, version 2.0,
for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA

*****************************************************************************/

/** @file include/page0page.ic
 Index page routines

 Created 2/2/1994 Heikki Tuuri
 *******************************************************/

#include <innodb/record/rec_get_nth_field_old.h>
#include <innodb/record/rec_set_n_owned_new.h>
#include <innodb/machine/data.h>
#include <innodb/buf_block/buf_block_get_frame.h>
#include <innodb/page/page_header_get_field.h>
#include <innodb/disk/fil_page_index_page_check.h>
#include <innodb/record/rec_set_n_owned_old.h>
#include <innodb/record/rec_get_next_offs.h>
#include <innodb/record/rec_get_deleted_flag.h>
#include <innodb/record/rec_set_next_offs_new.h>
#include <innodb/record/rec_set_next_offs_old.h>
#include <innodb/record/rec_get_n_owned_new.h>
#include <innodb/record/rec_get_n_owned_old.h>
#include <innodb/record/rec_offs_size.h>
#include <innodb/page/header.h>

void page_zip_dir_delete(page_zip_des_t *page_zip, byte *rec,
                         const dict_index_t *index, const ulint *offsets,
                         const byte *free);



#ifdef UNIV_DEBUG
#include "log0recv.h"
#endif /* !UNIV_DEBUG */
#ifndef UNIV_HOTBACKUP

#endif /* !UNIV_HOTBACKUP */
#include "mtr0log.h"
#include "page0zip.h"

#ifdef UNIV_MATERIALIZE
#undef UNIV_INLINE
#define UNIV_INLINE
#endif


































































































/** Puts a record to free list. */
UNIV_INLINE
void page_mem_free(page_t *page,              /*!< in/out: index page */
                   page_zip_des_t *page_zip,  /*!< in/out: compressed page,
                                              or NULL */
                   rec_t *rec,                /*!< in: pointer to the
                                              (origin of) record */
                   const dict_index_t *index, /*!< in: index of rec */
                   const ulint *offsets)      /*!< in: array returned by
                                              rec_get_offsets() */
{
  rec_t *free;
  ulint garbage;

  ut_ad(rec_offs_validate(rec, index, offsets));
  free = page_header_get_ptr(page, PAGE_FREE);

  page_rec_set_next(rec, free);
  page_header_set_ptr(page, page_zip, PAGE_FREE, rec);

  garbage = page_header_get_field(page, PAGE_GARBAGE);

  page_header_set_field(page, page_zip, PAGE_GARBAGE,
                        garbage + rec_offs_size(offsets));

  if (page_zip) {
    page_zip_dir_delete(page_zip, rec, index, offsets, free);
  } else {
    page_header_set_field(page, page_zip, PAGE_N_RECS,
                          page_get_n_recs(page) - 1);
  }
}



#ifdef UNIV_MATERIALIZE
#undef UNIV_INLINE
#define UNIV_INLINE UNIV_INLINE_ORIGINAL
#endif
